<?xml version="1.0" encoding="UTF-8"?>

<!--
    Copyright (c) 2011-2015 Apple Inc. All rights reserved.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
  -->

<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
	<dict>
		<!-- Define the kinds of software and user behavior the load simulation
			will simulate. -->
		<key>clients</key>

		<!-- Have as many different kinds of software and user behavior configurations
			as you want. Each is a dict -->
		<array>
			<dict>
				<!-- Here is a El Capitan iCal simulator. -->
				<key>software</key>
				<string>contrib.performance.loadtest.ical.OS_X_10_11</string>

				<!-- Arguments to use to initialize the client instance. -->
				<key>params</key>
				<dict>
					<!-- Name that appears in logs. -->
					<key>title</key>
					<string>10.11</string>

					<!-- Client can poll the calendar home at some interval. This is
						in seconds. -->
					<key>calendarHomePollInterval</key>
					<integer>5</integer>

					<!-- If the server advertises xmpp push, OS X 10.11 can wait for notifications
						about calendar home changes instead of polling for them periodically. If
						this option is true, then look for the server advertisement for xmpp push
						and use it if possible. Still fall back to polling if there is no xmpp push
						advertised. -->
					<key>supportPush</key>
					<false />
					<key>supportAmpPush</key>
					<true />
				</dict>

				<!-- The profiles define certain types of user behavior on top of the
					client software being simulated. -->
				<key>profiles</key>
				<array>

					<!-- First an calendar-creating profile, which will periodically create a new calendar -->
					<dict>
						<key>class</key>
						<string>contrib.performance.loadtest.profiles.CalendarMaker</string>

						<key>params</key>
						<dict>
							<key>enabled</key>
							<true />

							<!-- Define the interval (in seconds) at which this profile will use
								its client to create a new calendar. -->
							<key>interval</key>
							<integer>15</integer>
						</dict>
					</dict>

					<!-- This profile will create a new event, and then periodically change something about the event. -->
					<dict>
						<key>class</key>
						<string>contrib.performance.loadtest.profiles.CalendarUpdater</string>

						<key>params</key>
						<dict>
							<key>enabled</key>
							<true />

							<!-- Define the interval (in seconds) at which this profile will use
								its client to update an existing calendar. -->
							<key>interval</key>
							<integer>5</integer>
						</dict>
					</dict>

					<!-- This profile randomly shares calendars. -->
					<dict>
						<key>class</key>
						<string>contrib.performance.loadtest.profiles.CalendarSharer</string>

						<key>params</key>
						<dict>
							<key>enabled</key>
							<false />

							<!-- Define the interval (in seconds) at which this profile will use
								its client to share an existing calendar. -->
							<key>interval</key>
							<integer>30</integer>
						</dict>
					</dict>

					<!-- This profile randomly deletes calendars. -->
					<dict>
						<key>class</key>
						<string>contrib.performance.loadtest.profiles.CalendarDeleter</string>

						<key>params</key>
						<dict>
							<key>enabled</key>
							<true />

							<!-- Define the interval (in seconds) at which this profile will use
								its client to delete an existing calendar. -->
							<key>interval</key>
							<integer>30</integer>
						</dict>
					</dict>
				</array>

				<!-- Determine the frequency at which this client configuration will
					appear in the clients which are created by the load tester. -->
				<key>weight</key>
				<integer>1</integer>
			</dict>
		</array>
	</dict>
</plist>
